{"version":3,"file":"add-reminder.js","sources":["pages/add-reminder/add-reminder.vue","D:/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvYWRkLXJlbWluZGVyL2FkZC1yZW1pbmRlci52dWU"],"sourcesContent":["<template>\n  <view class=\"container\">\n    <view class=\"form\">\n      <!-- 时间选择器 -->\n      <view class=\"form-item time-picker-box\">\n        <text class=\"section-title\">选择提醒时间</text>\n        <!-- 显示当前选择的时间 -->\n        <text class=\"selected-time\">{{ formattedTime }}</text>\n        <view class=\"time-picker\">\n          <picker-view \n            class=\"picker-view\" \n            :value=\"pickerValue\" \n            @change=\"handleTimeChange\"\n            indicator-class=\"picker-indicator\"\n          >\n            <!-- 年 -->\n            <picker-view-column class=\"picker-column\">\n              <view \n                v-for=\"(year, index) in years\" \n                :key=\"index\" \n                class=\"picker-item\"\n              >{{ year }}年</view>\n            </picker-view-column>\n            <!-- 月 -->\n            <picker-view-column class=\"picker-column\">\n              <view \n                v-for=\"(month, index) in months\" \n                :key=\"index\" \n                class=\"picker-item\"\n              >{{ formatNumber(month) }}月</view>\n            </picker-view-column>\n            <!-- 日 -->\n            <picker-view-column class=\"picker-column\">\n              <view \n                v-for=\"(day, index) in days\" \n                :key=\"index\" \n                class=\"picker-item\"\n              >{{ formatNumber(day) }}日</view>\n            </picker-view-column>\n            <!-- 时 -->\n            <picker-view-column class=\"picker-column\">\n              <view \n                v-for=\"(hour, index) in hours\" \n                :key=\"index\" \n                class=\"picker-item\"\n              >{{ formatNumber(hour) }}</view>\n            </picker-view-column>\n            <!-- 分 -->\n            <picker-view-column class=\"picker-column\">\n              <view \n                v-for=\"(minute, index) in minutes\" \n                :key=\"index\" \n                class=\"picker-item\"\n              >{{ formatNumber(minute) }}</view>\n            </picker-view-column>\n          </picker-view>\n        </view>\n      </view>\n      \n      <!-- 提醒内容 -->\n      <view class=\"form-item content-box\">\n        <text class=\"section-title\">提醒内容</text>\n        <view class=\"input-container\">\n          <input \n            type=\"text\" \n            v-model=\"reminderText\" \n            placeholder=\"请输入提醒事项（例如：抢购五一车票）\" \n            maxlength=\"40\" \n            class=\"input-box\"\n          />\n          <text class=\"word-count\">{{ reminderText.length }}/40</text>\n        </view>\n      </view>\n      \n      <button class=\"save-btn\" @click=\"saveReminder\">保存提醒事项</button>\n    </view>\n  </view>\n</template>\n\n<script>\nconst START_YEAR = new Date().getFullYear() - 1\nconst END_YEAR = START_YEAR + 8\n\nexport default {\n  data() {\n    const now = new Date()\n    return {\n      years: [],\n      months: Array.from({length: 12}, (_, i) => i + 1),\n      days: [],\n      hours: Array.from({length: 24}, (_, i) => i),\n      minutes: Array.from({length: 60}, (_, i) => i),\n      \n      selectedYear: now.getFullYear(),\n      selectedMonth: now.getMonth() + 1,\n      selectedDay: now.getDate(),\n      selectedHour: now.getHours(),\n      selectedMinute: now.getMinutes(),\n      \n      pickerValue: [0, 0, 0, 0, 0],\n      reminderText: '',\n      // 新增变量用于存储格式化后的时间\n      formattedTime: this.formatDate(now)\n    }\n  },\n  computed: {\n    currentDays() {\n      return new Date(\n        this.selectedYear, \n        this.selectedMonth, \n        0\n      ).getDate()\n    }\n  },\n  created() {\n    this.initYears()\n    this.updateDays()\n    this.setInitialPickerValue()\n  },\n  methods: {\n    formatNumber(n) {\n      return n < 10 ? '0' + n : n.toString()\n    },\n    formatDate(date) {\n      const year = date.getFullYear()\n      const month = this.formatNumber(date.getMonth() + 1)\n      const day = this.formatNumber(date.getDate())\n      const hour = this.formatNumber(date.getHours())\n      const minute = this.formatNumber(date.getMinutes())\n      return `${year}-${month}-${day} ${hour}:${minute}`\n    },\n    initYears() {\n      this.years = Array.from(\n        {length: END_YEAR - START_YEAR + 1}, \n        (_, i) => START_YEAR + i\n      )\n    },\n    updateDays() {\n      const daysInMonth = new Date(\n        this.selectedYear, \n        this.selectedMonth, \n        0\n      ).getDate()\n      this.days = Array.from({length: daysInMonth}, (_, i) => i + 1)\n    },\n    setInitialPickerValue() {\n      const yearIndex = this.years.indexOf(this.selectedYear)\n      const monthIndex = this.selectedMonth - 1\n      const dayIndex = this.selectedDay - 1\n      const hourIndex = this.selectedHour\n      const minuteIndex = this.selectedMinute\n      \n      this.pickerValue = [yearIndex, monthIndex, dayIndex, hourIndex, minuteIndex]\n    },\n    handleTimeChange(e) {\n      const value = e.detail.value\n      this.selectedYear = this.years[value[0]]\n      this.selectedMonth = this.months[value[1]]\n      this.selectedDay = this.days[value[2]]\n      this.selectedHour = this.hours[value[3]]\n      this.selectedMinute = this.minutes[value[4]]\n      \n      if(value[0] !== this.pickerValue[0] || value[1] !== this.pickerValue[1]) {\n        this.updateDays()\n      }\n    },\n    async saveReminder() {\n      if (!this.reminderText.trim()) {\n        uni.showToast({ title: '请输入提醒内容', icon: 'none' })\n        return\n      }\n      \n      const timestamp = new Date(\n        this.selectedYear,\n        this.selectedMonth - 1,\n        this.selectedDay,\n        this.selectedHour,\n        this.selectedMinute\n      ).getTime()\n\n      try {\n        const { data } = await uni.getStorage({ key: 'reminders' })\n        const reminders = data || []\n        \n        reminders.push({\n          id: Date.now(),\n          text: this.reminderText,\n          time: timestamp,\n          checked: false\n        })\n        \n        await uni.setStorage({ key: 'reminders', data: reminders })\n        uni.showToast({ title: '保存成功', icon: 'success' })\n        \n        // 更新显示的时间\n        this.formattedTime = this.formatDate(new Date(timestamp))\n\n        setTimeout(() => {\n          uni.navigateBack()\n        }, 1500)\n      } catch (error) {\n        uni.showToast({ title: '保存失败', icon: 'none' })\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n/* 基础样式 */\n$primary-color: #1e6eba;\n$secondary-color: #F0F9EB;\n$border-color: #E5E7EB;\n\n.container {\n  padding: 24rpx;\n  background: #F8F9FB;\n  min-height: 100vh;\n}\n\n.form {\n  .form-item {\n    margin-bottom: 24rpx;\n    background: #FFFFFF;\n    border-radius: 20rpx;\n    box-shadow: 0 6rpx 18rpx rgba(0, 0, 0, 0.03);\n    overflow: hidden;\n\n    &.time-picker-box {\n      .selected-time {\n        padding: 0 24rpx 16rpx;\n        font-size: 28rpx;\n        color: #666;\n      }\n      .time-picker {\n        .picker-view {\n          height: 350rpx; \n          \n          .picker-item {\n            height: 72rpx; \n            line-height: 72rpx;\n            font-size: 30rpx;\n          }\n          \n          .picker-indicator {\n            height: 72rpx;\n            border-color: $primary-color;\n            background: linear-gradient(180deg, rgba($primary-color, 0.1) 0%, rgba($primary-color, 0.05) 100%);\n          }\n        }\n      }\n    }\n\n    &.content-box {\n      padding: 24rpx;\n      border: 2rpx solid $border-color; // 添加边框分隔\n    }\n\n    .section-title {\n      font-size: 32rpx;\n      color: #333;\n      font-weight: 600;\n      padding: 0 0 16rpx 24rpx;\n      background: $secondary-color; // 添加背景色区分\n    }\n\n    .input-container {\n      .input-box {\n        width: 100%;\n        height: 100rpx; // 增加输入框高度\n        padding: 0 32rpx;\n        font-size: 30rpx;\n        border: none;\n        border-radius: 16rpx;\n        background: #F8F9FB;\n        box-sizing: border-box;\n\n        &::placeholder {\n          color: #999;\n          line-height: 1.2; // 优化文字显示\n        }\n      }\n\n      .word-count {\n        position: absolute;\n        right: 24rpx;\n        bottom: 24rpx;\n        font-size: 24rpx;\n        color: #999;\n      }\n    }\n  }\n\n  .save-btn {\n    width: 100%;\n    height: 96rpx;\n    line-height: 96rpx;\n    font-size: 34rpx;\n    color: white;\n    background: linear-gradient(135deg, $primary-color, #2ecc71);\n    border-radius: 48rpx;\n    box-shadow: 0 8rpx 24rpx rgba(39, 186, 152, 0.3);\n    transition: all 0.3s;\n\n    &:active {\n      transform: scale(0.98);\n      opacity: 0.9;\n    }\n  }\n}\n</style>","import MiniProgramPage from 'C:/Users/JD/Desktop/Lotus/pages/add-reminder/add-reminder.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}